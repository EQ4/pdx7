===========
The PDX7 V2
===========

:Authors:
    Frank Barknecht <fbar@footils.org>
:Abstract: 
    PDX7 is a six operator FM synthesizer for Pure Data.

Introduction
------------

In 2001, I started learning Pd. The first bigger patch I did was
a six operator FM synthesizer loosely modelled after the famous DX7, which I
called PDX7. 

Now it's five years later and not only in retrospective this first patch is
quite a mess. But I still like the sounds it generates. In the meantime I
learned a lot more about Pd and about a lot of other things. So I thought, why
not celebrate the fifth anniversary of me doing Pd, the fifth "birthday" with a
cleaner version of the PDX7, that maybe others can understand to use as well.

The result is the PDX7 V2.

Requirements
------------

The first PDX7 used no externals at all. I guess, I didn't even know how to
compile externals in 2001. This has changed. One external collection is totally
required for the new PDX7 and that is "iemmatrix". The [mtx_*~] object formerly
known as [matrix~] is used to handle the operator matrix and makes it possible
to use much less patch cords than the first PDX7 had. In fact thanks to [mtx_*~]
the PDX7 turned out to be a very simple patch where most of the patching work is
put into creating a usable graphical interface. 

PDX7 also requires Pd in at least version 0.39 because the then introduced
[list] objects and some newer methods of messages are used ("adddollar"). 

Apart from that not other externals are strictly required. However PDX7 also
uses abstractions from two other collections by me: [list]-abs and Memento.
Both are available in the Sourceforge-CVS at pure-data.sf.net in the
abstractions sections. While [list]-abs doesn't require any more externals,
Memento needs [pool] and [OSCroute]. Getting [pool] to run can be tricky. It is
perfectly possible to use the PDX7 V2 withouth Memento. The two things missing
will be saving of settings and remote control through OSC. The polyphony
example patch will not work correctly because of this. And because of the large
number of parameters you will want to have state saving in the long run. Duh.

Additionally the help patch uses [Scope~] from Cyclone to display the resulting
waveform.

Here's a little checklist: 

* Pd 0.39 or newer
* iemmatrix
* [list]-abs
* Memento
* [OSCroute] (from OSC)
* [pool]
* [Scope~] (help-patch only)

Usage
-----

.. figure:: pdx7.png
   :scale: 50
   
   Screenshot of the PDX7 V2

The first inlet of the patch rrad.pdx7~.pd accepts lists of two float numbers
that represent midi note number (0-127) and midi velocity value (0-127).

The PDX7 is a FM synthesizer, or to be precise: a phase modulation synthesizer.
In consists of six "operators": cosine wave oscillators with envelopes, that
provide a way to modulate their phases directly. The operators are in the
abstraction pmosc~.pd

The base frequency of every operator is set to the incoming midi note converted
to frequency times the value of the respective operators "Freq_Rat" number box:
it's frequency ratio. See the next picture: 

.. figure:: pdx7-frequencies.png
   :scale: 50
   
   Setting the frequency/harmonicity ratios of each operator

How much of an operator is sent to the main signal outlets is controlled in the
"2ch_out" area. Here it is possible to control the signal volume on the left and
the right channel independently. The toggles can be used to link both number
boxes to always have the same value.  

.. figure:: pdx7-carrier.png
   :scale: 50
   
   Controls to specify how much of each operator is used as a "carrier" and
   send to the main signal outs.

Every operator has its own ADSR-envelope. The GUI-bang on the left side can be
used to initialize all ADSR-settings to some default values. The ADSR's peak
values are as loud as the incoming midi velocity specifies. The "lvl%" number
additionally allows setting the percentage volume of each operator
independently.

.. figure:: pdx7-envelopes.png
   :scale: 50
 
   Every operator has its own ADSR-envelope.
 
Every operator's output can be routed to modulate the phase of every other
operator and also to modulate its own phase. As we have 6 operators, we have
6*6 or 36 possible phase modulations. Which of these are active is controlled
through the "modulation matrix" which takes up the most screen estate of the
PDX7 V2. The values shown here also are percent values. This matrix is used to
control what is also called the "modulation index" of each possible phase
modulation.

.. figure:: pdx7-modmatrix.png
   :scale: 50
   
   The modulation matrix controls the phase modulation indices between
   operators.

Now I would recommend you just play with the values. Don't forget to turn up at
least one operator's volume in the "2ch_out" section, to have at least one
carrier active. Also don't forget to set the frequency ratios: They all default to
zero! It is best to use integer values or values close to integers for the
frequencies, as otherwise you are likely to get sounds close to white noise. But
you already knew that from reading " Theory and Techniques of Electronic Music"
chapter "Frequency and phase modulation", right?
